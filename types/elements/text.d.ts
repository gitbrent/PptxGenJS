import Relations from '../relations';
import ElementInterface from './element-interface';
import { ShadowOptions } from './shadow';
import Shape, { ShapeConfig, ShapeOptions } from './shape';
import Position, { PositionOptions } from './position';
import LineElement from './line';
import TextFragment, { FragmentOptions } from './text-fragment';
import ParagraphProperties, { ParagraphPropertiesOptions } from './paragraph-properties';
import RunProperties, { RunPropertiesOptions } from './run-properties';
import BodyProperties, { BodyPropertiesOptions } from './body-properties';
export declare type TextOptions = PositionOptions & ParagraphPropertiesOptions & RunPropertiesOptions & BodyPropertiesOptions & ShapeOptions & {
    breakLine?: boolean;
    shape?: ShapeConfig;
    fill?: string;
    placeholder?: string;
    line?: string;
    lineSize?: number;
    lineDash?: string;
    lineHead?: string;
    lineTail?: string;
    isTextBox?: boolean;
    shadow?: ShadowOptions;
};
export default class TextElement implements ElementInterface {
    fragments: TextFragment[];
    shape: Shape;
    fill?: string;
    color?: string;
    lang?: string;
    position: Position;
    line: LineElement;
    isTextBox?: boolean;
    shadow: any;
    placeholder?: string;
    bodyProperties: BodyProperties;
    paragraphProperties: ParagraphProperties;
    runProperties: RunProperties;
    constructor(text: FragmentOptions, opts: TextOptions, relations: Relations);
    private renderFill;
    render(idx: any, presLayout: any, placeholder: any): string;
}
